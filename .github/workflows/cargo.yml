name: Cargo
permissions:
  contents: read
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  check:
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4
      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            src-tauri/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        uses: awalsh128/cache-apt-pkgs-action@v1.5.3
        with:
          packages: libgtk-3-dev webkit2gtk-4.0 libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf libsoup-3.0-dev libjavascriptcoregtk-4.1-dev
          version: 1.0
      - name: Install WebView2 (Windows only)
        if: matrix.platform == 'windows-latest'
        run: |
          Invoke-WebRequest -Uri "https://go.microsoft.com/fwlink/p/?LinkId=2124703" -OutFile "MicrosoftEdgeWebview2Setup.exe"
          Start-Process -FilePath "MicrosoftEdgeWebview2Setup.exe" -ArgumentList "/silent", "/install" -Wait
        shell: powershell
      - name: Run cargo check
        run: cargo check --manifest-path=src-tauri/Cargo.toml

  test:
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
        exclude:
            # FIXME: Windows tests are currently broken
          - platform: windows-latest
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4
      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            src-tauri/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        uses: awalsh128/cache-apt-pkgs-action@v1.5.3
        with:
          packages: libgtk-3-dev webkit2gtk-4.0 libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf libsoup-3.0-dev libjavascriptcoregtk-4.1-dev
          version: 1.0
      - name: Install WebView2 (Windows only)
        if: matrix.platform == 'windows-latest'
        run: |
          Invoke-WebRequest -Uri "https://go.microsoft.com/fwlink/p/?LinkId=2124703" -OutFile "MicrosoftEdgeWebview2Setup.exe"
          Start-Process -FilePath "MicrosoftEdgeWebview2Setup.exe" -ArgumentList "/silent", "/install" -Wait
        shell: powershell
      - name: Run cargo test
        run: |
          if [ "${{ matrix.platform }}" = "windows-latest" ]; then
            cargo test --manifest-path=src-tauri/Cargo.toml --lib
          else
            cargo test --manifest-path=src-tauri/Cargo.toml
          fi
        shell: bash
        env:
          RUST_BACKTRACE: 1
          WEBVIEW2_ADDITIONAL_BROWSER_ARGUMENTS: --disable-features=msWebView2BrowserHitTesting

  build:
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4
      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            src-tauri/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        uses: awalsh128/cache-apt-pkgs-action@v1.5.3
        with:
          packages: libgtk-3-dev webkit2gtk-4.0 libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf libsoup-3.0-dev libjavascriptcoregtk-4.1-dev
          version: 1.0
      - name: Install WebView2 (Windows only)
        if: matrix.platform == 'windows-latest'
        run: |
          Invoke-WebRequest -Uri "https://go.microsoft.com/fwlink/p/?LinkId=2124703" -OutFile "MicrosoftEdgeWebview2Setup.exe"
          Start-Process -FilePath "MicrosoftEdgeWebview2Setup.exe" -ArgumentList "/silent", "/install" -Wait
        shell: powershell
      - name: Run cargo build
        run: cargo build --release --manifest-path=src-tauri/Cargo.toml

  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            src-tauri/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf libsoup-3.0-dev libjavascriptcoregtk-4.1-dev
      - name: Run cargo clippy
        run: cargo clippy --manifest-path=src-tauri/Cargo.toml --all-targets --all-features -- -D warnings
